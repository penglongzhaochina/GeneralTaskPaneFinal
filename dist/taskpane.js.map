{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane/./src/taskpane/taskpane.ts","webpack://office-addin-taskpane/webpack/startup"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global document, Office, Word */\n\n//import * as child_process from \"child_process\";\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Word) {\n    document.getElementById(\"sideload-msg\").style.display = \"none\";\n    document.getElementById(\"app-body\").style.display = \"flex\";\n    document.getElementById(\"run\").onclick = run;\n\n    // document.getElementById(\"file\").onclick = getBase64;\n    document.getElementById(\"file\").onchange = getBase64;\n    document.getElementById(\"insert-doc\").onclick = insertDocument;\n\n    document.getElementById(\"insertContentControl\").onclick = insertContentControl;\n    document.getElementById(\"save\").onclick = save;\n  }\n\n  if (info.host === Office.HostType.Excel) {\n    document.getElementById(\"sideload-msg\").style.display = \"none\";\n    document.getElementById(\"app-body\").style.display = \"flex\";\n    document.getElementById(\"protectSheet\").onclick = protectSheet;\n  }\n});\n\nexport async function protectSheet() {\n  try {\n    await Excel.run(async (context) => {\n      let activeSheet = context.workbook.worksheets.getActiveWorksheet();\n      activeSheet.load(\"protection/protected\");\n\n      await context.sync();\n\n      if (!activeSheet.protection.protected) {\n        activeSheet.protection.protect({ allowAutoFilter: true }, \"123\");\n      }\n    });\n  } catch (error) {\n    document.getElementById(\"run\").style.backgroundColor = \"#00FF00\";\n    document.getElementById(\"run\").innerHTML = error;\n  }\n}\n\nlet externalDoc;\n\nexport async function getBase64() {\n  // Retrieve the file and set up an HTML FileReader element.\n  // const myFile = <HTMLInputElement>document.getElementById(\"file\");\n  const myFile = this.files[0];\n  const reader = new FileReader();\n\n  reader.onload = (event) => {\n    // Remove the metadata before the base64-encoded string.\n    const startIndex = reader.result.toString().indexOf(\"base64,\");\n    externalDoc = reader.result.toString().substr(startIndex + 7);\n  };\n\n  // Read the file as a data URL so that we can parse the base64-encoded string.\n  if (myFile) {\n    reader.readAsDataURL(myFile);\n  }\n}\n\nexport async function insertDocument() {\n  try {\n    await Word.run(async (context) => {\n      // Retrieve the source document.\n      context.document.getSelection().insertFileFromBase64(externalDoc, \"Start\", false);\n      await context.sync();\n    });\n  } catch (error) {\n    document.getElementById(\"run\").style.backgroundColor = \"#00FF00\";\n    document.getElementById(\"run\").innerHTML = error;\n  }\n}\n\n/*export function launchProjectInVSCode()\n{\n  const execSync = child_process.execSync;\n  const command = `code D:\\\\testProjectCreation\\\\Word-Add-in-AI-Assistant`;\n  try {\n    //execSync(command, { timeout: 10000, stdio: ['ignore']});\n    execSync(command);\n    //vscode.window.showInformationMessage('Project launched successfully!');\n  } catch (error) {\n    //vscode.window.showErrorMessage('Failed to launch the project. ' + error);\n    //console.log(error);\n  }\n}*/\n\n\nexport async function insertContentControl() {\n  try {\n\n      await Word.run(async (context) => {\n      // Retrieve the source document.\n      //context.document.getSelection().insertContentControl(Word.ContentControlType.plainText);\n      const par = context.document.body.paragraphs.getFirst();\n      par.load();\n      await context.sync();\n      var text = par.text;\n      console.log(text);\n    });\n  } catch (error) {\n    document.getElementById(\"run\").style.backgroundColor = \"#00FF00\";\n    document.getElementById(\"run\").innerHTML = error;\n  }\n}\n\nvar dialog;\n\nexport async function save() {\n  try {\n    await Word.run(async (context) => {\n      // Retrieve the source document.\n      //var base64 = \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAxMDAgMTAwIj4KICA8cGF0aCBkPSJNMzAsMWg0MGwyOSwyOXY0MGwtMjksMjloLTQwbC0yOS0yOXYtNDB6IiBzdHJva2U9IiMwMDAiIGZpbGw9Im5vbmUiLz4gCiAgPHBhdGggZD0iTTMxLDNoMzhsMjgsMjh2MzhsLTI4LDI4aC0zOGwtMjgtMjh2LTM4eiIgZmlsbD0iI2EyMyIvPiAKICA8dGV4dCB4PSI1MCIgeT0iNjgiIGZvbnQtc2l6ZT0iNDgiIGZpbGw9IiNGRkYiIHRleHQtYW5jaG9yPSJtaWRkbGUiPjwhW0NEQVRBWzQxMF1dPjwvdGV4dD4KPC9zdmc+Cg==\";\n      //context.document.body.insertInlinePictureFromBase64(base64, \"Start\");\n      Office.context.ui.displayDialogAsync(\"https://app.gptzero.me/login\", { height:50, width:50 }, dialogCallback);\n      await context.sync();\n    });\n  } catch (error) {\n    document.getElementById(\"run\").style.backgroundColor = \"#00FF00\";\n    document.getElementById(\"run\").innerHTML = error;\n  }\n}\n\nfunction dialogCallback(asyncResult) {\n  if (asyncResult.status == \"failed\") {\n\n      // In addition to general system errors, there are 3 specific errors for \n      // displayDialogAsync that you can handle individually.\n      switch (asyncResult.error.code) {\n          case 12004:\n              console.log(\"Domain is not trusted\");\n              break;\n          case 12005:\n              console.log(\"HTTPS is required\");\n              break;\n          case 12007:\n              console.log(\"A dialog is already opened.\");\n              break;\n          default:\n              console.log(asyncResult.error.message);\n              break;\n      }\n  }\n  else {\n      dialog = asyncResult.value;\n      /*Messages are sent by developers programatically from the dialog using office.context.ui.messageParent(...)*/\n      dialog.addEventHandler(Office.EventType.DialogMessageReceived, messageHandler);\n\n      /*Events are sent by the platform in response to user actions or errors. For example, the dialog is closed via the 'x' button*/\n      //dialog.addEventHandler(Office.EventType.DialogEventReceived, eventHandler);\n  }\n}\n\nfunction messageHandler(arg) {\n  dialog.close();\n  //const messageFromDialog = JSON.parse(arg.message);\n  //console.log(messageFromDialog.name);\n  console.log(arg.message);\n\n  window.location.replace(\"/newPage.html\");\n    // Alternatively ...\n    // window.location.href = \"/newPage.html\";\n}\n\n\nexport async function tryCatch(callback) {\n  try {\n    await callback();\n  } catch (error) {\n    // Note: In a production add-in, you'd want to notify the user through your add-in's UI.\n    console.error(error);\n  }\n}\n\nexport async function run() {\n  var element =  document.getElementById(\"scriptText\") as HTMLTextAreaElement;\n  var script = element.value;  \n  console.log(script);\n  var runFunc = new Function(script);\n  runFunc();\n}\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = {};\n__webpack_modules__[14183](0, __webpack_exports__);\n"],"names":["externalDoc","dialog","protectSheet","Excel","run","context","activeSheet","workbook","worksheets","getActiveWorksheet","load","sync","_a","protection","protected","protect","allowAutoFilter","document","getElementById","style","backgroundColor","innerHTML","error_1","getBase64","myFile","this","files","reader","FileReader","onload","event","startIndex","result","toString","indexOf","substr","readAsDataURL","insertDocument","Word","getSelection","insertFileFromBase64","error_2","insertContentControl","par","body","paragraphs","getFirst","text","console","log","error_3","save","Office","ui","displayDialogAsync","height","width","dialogCallback","error_4","asyncResult","status","error","code","message","value","addEventHandler","EventType","DialogMessageReceived","messageHandler","arg","close","window","location","replace","element","script","Function","runFunc","onReady","info","host","HostType","display","onclick","onchange","exports","callback","error_5"],"sourceRoot":""}